cmake_minimum_required(VERSION 3.1)
set(Headers capacityDistribution.h computeConditionalProb.h context.h includeMPFR.h includeMPIRXX.h PMC.h turnip.h crudeMC.h generalisedSplittingFixedEffort.h resampleCapacities.h generalisedSplittingFixedFactors.h generalisedSplittingFixedFactorsEvolution.h)
set(CppFiles capacityDistribution.cpp context.cpp computeConditionalProb.cpp PMC.cpp turnip.cpp crudeMC.cpp generalisedSplittingFixedEffort.cpp resampleCapacities.cpp generalisedSplittingFixedFactors.cpp generalisedSplittingFixedFactorsEvolution.cpp)
add_library(multiStateCommon STATIC ${CppFiles} ${Headers})
target_link_libraries(multiStateCommon PUBLIC ${Boost_LIBRARIES} mpfr maxFlowAlgorithms)
target_include_directories(multiStateCommon PUBLIC ${Boost_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR})
target_compile_definitions(multiStateCommon PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)

if(WIN32)
	target_compile_definitions(multiStateCommon PUBLIC _SCL_SECURE_NO_WARNINGS)
	target_link_libraries(multiStateCommon PUBLIC mpir)
else()
	if(NOT(CMAKE_CXX_COMPILER_ID MATCHES "Intel"))
		target_compile_features(multiStateCommon PUBLIC cxx_rvalue_references)
		target_compile_options(multiStateCommon PUBLIC "-fPIC")
	else()
		target_compile_options(multiStateCommon PUBLIC "-std=c++11" "-fPIC")
	endif()

endif()
